{"version":3,"sources":["config/firebase.js","Authentication/AuthService.jsx","Authentication/Login.jsx","Authentication/SignUp.jsx","TaskDetail.jsx","History/TaskHistory.jsx","Header.jsx","Room/Room.jsx","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AuthContext","React","createContext","Title","styled","h1","Box","div","InputBox","Input","input","ButtonWrap","LoginButton","button","SignupButton","Login","history","useState","email","setEmail","password","setPassword","useContext","to","onSubmit","e","preventDefault","auth","signInWithEmailAndPassword","then","push","catch","err","console","log","alert","htmlFor","type","id","name","placeholder","onChange","target","value","onClick","SignUp","createUserWithEmailAndPassword","ItemBox","ItemTaskName","ItemDeadline","ItemRequiredTime","Textarea","textarea","Button","TaskDetail","useHistory","useParams","task","setTask","isChanged","setIsChanged","useEffect","firestore","collection","doc","get","data","saveTextData","update","detail","taskName","dayjs","deadline","format","requiredTime","window","confirm","IndexBox","Item","ItemDetail","ItemDeleteIcon","DeleteIcon","TaskHistory","getTasks","completedTasks","setCompletedTask","filter","isCompleted","map","completedTask","delete","Li","li","Ul","ul","Header","location","useLocation","pathname","TaskNameBox","RequiredTimeBox","DeadlineBox","InputTaskName","SelectRequiredTime","select","InputDeadline","AddCircleIconBox","Error","isInput","TaskWrap","Room","tasks","setTasks","setTaskName","setRequiredTime","setDeadline","isInputTaskName","setIsInputTaskName","isInputRequiredTime","setIsInputRequiredTime","isInputDeadline","setIsInputDeadline","sortTasks","tmpTasks","now_msec","Date","getTime","forEach","tmpTask","difference","parse","slice","sort","a","b","event","nanoid","set","App","setGetTasks","onSnapshot","snapshot","docs","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7e723d6.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/storage'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCKgv7ngh_sXHLqLemPL9xXCqqL6rWIUBA\",\n  authDomain: \"todo-app-3802b.firebaseapp.com\",\n  projectId: \"todo-app-3802b\",\n  storageBucket: \"todo-app-3802b.appspot.com\",\n  messagingSenderId: \"531781333596\",\n  appId: \"1:531781333596:web:944c00c3ee70f22043ac99\"\n}\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase\n","import React, { useState, useEffect } from 'react'\nimport firebase from '../config/firebase'\n\nconst AuthContext = React.createContext()\n\nconst AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null)\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(user => {\n            setUser(user)\n        })\n    }, [])\n\n    return (\n        <AuthContext.Provider value={user}>\n            {children}\n        </AuthContext.Provider>\n\n    )\n}\n\nexport { AuthContext, AuthProvider }\n","import React, { useState, useContext } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { AuthContext } from './AuthService'\nimport firebase from '../config/firebase'\nimport styled from 'styled-components'\n\nconst Login = ({ history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(() => {\n                history.push(\"/\")\n            })\n            .catch(err => {\n                console.log(err)\n                alert(err)\n            })\n    }\n\n    const user = useContext(AuthContext)\n\n    const moveToSignUp = () => {\n        history.push(\"/signup\")\n    }\n\n    if (user) {\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <>\n            <Title>Login</Title>\n            <form onSubmit={handleSubmit}>\n                <Box>\n                    <InputBox>\n                        <label htmlFor='email'>E-mail</label>\n                        <Input\n                            type='email'\n                            id='email'\n                            name='email'\n                            placeholder='Email'\n                            onChange={\n                                e => {\n                                    setEmail(e.target.value)\n                                }\n                            }\n                        />\n                    </InputBox>\n                    <InputBox>\n                        <label htmlFor='password'>Password</label>\n                        <Input\n                            type='password'\n                            id='password'\n                            name='password'\n                            placeholder='password'\n                            onChange={\n                                e => {\n                                    setPassword(e.target.value)\n                                }\n                            }\n\n                        />\n                    </InputBox>\n                    <ButtonWrap>\n                        <LoginButton type='submit'>Login</LoginButton>\n                        <SignupButton onClick={moveToSignUp}>アカウントをお持ちでない方はこちら</SignupButton>\n                    </ButtonWrap>\n                </Box>\n            </form>\n        </>\n    )\n\n\n}\n\n//styled-componentsの定義\n\nconst Title = styled.h1`\n text-align: center;\n margin-top:10px;\n font-size: 45px;\n width: 100%;\n `;\n\nconst Box = styled.div`\n display: flex;\n flex-direction: column;\n align-items: center;\n `\nconst InputBox = styled.div`\n display: flex;\n flex-direction: column;\n padding:10px;\n width: 60%;\n `\nconst Input = styled.input`\n padding:5px;\n font-size:20px;\n border:1px solid black;\n `\n\nconst ButtonWrap = styled.div`\n display: flex;\n flex-direction: column;\n align-items: center;\n `\nconst LoginButton = styled.button`\n width: 100%;\n margin-top:10px;\n margin-bottom:30px;\n padding:15px;\n font-size:18px;\n border:1px solid black;\n background-color:#00DD00;\n color:white;\n cursor:pointer;pointer;\n :hover{\n     background-color:#CCFFFF;\n     color:black\n }\n `\n\nconst SignupButton = styled.div`\n width: 100%;\n font-size:18px;\n cursor:pointer;\n :hover{\n     color:blue;\n }\n `\n\nexport default Login\n","import React, { useState } from 'react'\nimport firebase from '../config/firebase'\nimport styled from 'styled-components';\n\nconst SignUp = ({ history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(() => {\n                history.push(\"/\");\n            })\n            .catch(err => {\n                setEmail('');\n                setPassword('');\n                alert(err);\n                console.log(err)\n            })\n    }\n\n    const changeSubmit = (e) => {\n        history.push(\"/login\");\n    }\n\n\n\n    return (\n        <div>\n            <Title>Sign Up</Title>\n            <form onSubmit={handleSubmit}>\n                <Box>\n                    <InputBox>\n                        <label htmlFor='email'>E-mail</label>\n                        <Input\n                            onChange={e => { setEmail(e.target.value) }}\n                            name='email'\n                            type='email'\n                            id='email'\n                            placeholder='Email'\n                        />\n                    </InputBox>\n                    <InputBox>\n                        <label htmlFor='password'>Password</label>\n                        <Input\n                            onChange={e => { setPassword(e.target.value) }}\n                            name='password'\n                            type='password'\n                            id='password'\n                            placeholder='Password'\n                        />\n                    </InputBox>\n                    <ButtonWrap>\n                        <SignupButton type='submit'>Sign Up</SignupButton>\n                        <LoginButton onClick={changeSubmit}>アカウントをお持ちの方はこちら</LoginButton>\n                    </ButtonWrap>\n                </Box>\n            </form>\n        </div>\n    )\n}\n\n//styled-componensの定義//\n\nconst Title = styled.h1`\n text-align: center;\n margin-top:10px;\n font-size: 45px;\n width: 100%;\n `;\n\nconst Box = styled.div`\n display: flex;\n flex-direction: column;\n align-items: center;\n `\nconst InputBox = styled.div`\n display: flex;\n flex-direction: column;\n padding:10px;\n width: 60%;\n `\nconst Input = styled.input`\n padding:5px;\n font-size:20px;\n border:1px solid black;\n `\n\nconst ButtonWrap = styled.div`\n display: flex;\n flex-direction: column;\n align-items: center;\n `\nconst SignupButton = styled.button`\n width: 100%;\n margin-top:10px;\n margin-bottom:30px;\n padding:15px;\n font-size:18px;\n border:1px solid black;\n background-color:#00DD00;\n color:white;\n cursor:pointer;pointer;\n :hover{\n     background-color:#CCFFFF;\n     color:black\n }\n `\n\nconst LoginButton = styled.div`\n width: 100%;\n font-size:18px;\n cursor:pointer;\n :hover{\n     color:blue;\n }\n `\n\nexport default SignUp\n","import { useEffect, useState } from 'react'\nimport firebase from './config/firebase'\nimport 'firebase/firestore'\nimport styled from 'styled-components'\nimport { useParams, useHistory } from 'react-router-dom'\nimport dayjs from 'dayjs'\n\nconst TaskDetail = () => {\n    const history = useHistory()\n    const { id } = useParams()\n    const [task, setTask] = useState() //textareaの内容\n    const [isChanged, setIsChanged] = useState(false) //textに変更があったかどうか判定する値\n\n    //前保存したテキストをtextareaに返す処理　*Roomを開いた時にロードした方が良いと思う\n    useEffect(() => {\n        firebase.firestore().collection('tasks').doc(id).get()\n            .then(task => { setTask(task.data()) })\n    }, [])\n\n\n    //テキストをFirebaseに保存する関数　*docの値を変数にする\n    const saveTextData = (e) => {\n        e.preventDefault()\n        firebase.firestore().collection('tasks').doc(id).update({\n            detail: task.detail\n        })\n        setIsChanged(false)\n    }\n\n    //テキストの削除をする関数\n    const deleteText = (e) => {\n        e.preventDefault()\n        setTask({ ...task, detail: \"\" })\n        setIsChanged(true)\n    }\n\n    //Roomコンポーネントへ移動する関数\n    //textareaの内容に変更があった時内容を保存するか確認する\n    const moveToRoom = (e) => {\n        e.preventDefault()\n        if (isChanged) {\n            if (window.confirm('内容に変更があります。保存しますか?')) {\n                saveTextData(e)\n            }\n        }\n        history.push(\"/\")\n    }\n\n    return (\n        <>\n            <Box>\n                <ItemBox>\n                    <ItemTaskName>\n                        <div>タスク名</div>\n                        <div>{task?.taskName}</div>\n                    </ItemTaskName>\n                    <ItemDeadline>\n                        <div>期限</div>\n                        <div>{dayjs(task?.deadline).format('YYYY/MM/DD HH:mm')}</div>\n                    </ItemDeadline>\n                    <ItemRequiredTime>\n                        <div>かかる時間</div>\n                        <div>{task?.requiredTime} min</div>\n                    </ItemRequiredTime>\n                    <Title>詳細</Title>\n                </ItemBox>\n                <Textarea\n                    value={task?.detail}\n                    onChange={\n                        e => {\n                            setTask({ ...task, detail: e.target.value })\n                            setIsChanged(true)\n                        }\n                    }\n                />\n                <ButtonWrap>\n                    <Button onClick={saveTextData}>保存</Button>\n                    <Button onClick={deleteText}>削除</Button>\n                    <Button onClick={moveToRoom}>閉じる</Button>\n                </ButtonWrap>\n            </Box>\n        </>\n    )\n}\n\nconst Box = styled.div`\n\n`\n\nconst Title = styled.div`\nwidth:80%;\nfont-size:20px;\nmargin:0 auto;\nmargin-top:10px;\n`\n\nconst ItemBox = styled.div`\ndisplay:flex;\nflex-direction:column;\n`\n\nconst ItemTaskName = styled.div`\nwidth:80%;\nmargin:0 auto;\nmargin-top:10px;\n`\n\nconst ItemDeadline = styled.div`\nwidth:80%;\nmargin:0 auto;\nmargin-top:10px;\n`\n\nconst ItemRequiredTime = styled.div`\nwidth:80%;\nmargin:0 auto;\nmargin-top:10px;\n`\n\nconst Textarea = styled.textarea`\nwidth:80%;\nheight:100px;\ndisplay:block;\nmargin:0 auto;\nmargin-top:10px;\nbox-sizing:border-box;\nborder:1px solid black;\n`\n\nconst Button = styled.button`\nmargin-top:2px;\ncolor:white;\nbackground-color:#00DD00;\ncursor:pointer;\n    :hover{\n        opacity:0.8;\n        background-color:#CCFFFF;\n        color:black\n    }\n`\n\n\nconst ButtonWrap = styled.div`\n    margin:0 auto;\n    margin-top:10px;\n    width:80%;\n    display:flex;\n    flex-direction:column;\n\n`\n\n\nexport default TaskDetail\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport firebase from '../config/firebase'\nimport 'firebase/firestore'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport dayjs from 'dayjs'\n\nconst TaskHistory = ({ getTasks }) => {\n\n    const [completedTasks, setCompletedTask] = useState([])\n\n    useEffect(() => {\n        if (getTasks) setCompletedTask(getTasks.filter(task => task.isCompleted === true))\n    }\n        , [getTasks])\n\n    console.log(completedTasks)\n    console.log(getTasks)\n\n    //メイン画面にtaskを再表示する処理\n    const restoreTask = (id) => {\n        firebase.firestore().collection('tasks').doc(id)\n            .update({\n                isCompleted: false\n            })\n    }\n\n    //履歴画面からtaskを削除する処理（DBから完全に消去する処理）\n    const deleteTask = (id) => {\n        firebase.firestore().collection('tasks').doc(id)\n            .delete()\n    }\n\n    return (\n        <>\n            <Title>履歴</Title>\n            <IndexBox>\n                <ItemTaskName>\n                    件名\n                    </ItemTaskName>\n                <ItemRequiredTime>\n                    所要時間\n                    </ItemRequiredTime>\n                <ItemDeadline>\n                    期日\n                    </ItemDeadline>\n            </IndexBox>\n\n            <ul>\n                {\n                    completedTasks.map((completedTask => {\n                        return (\n                            <ItemBox>\n                                <ItemTaskName >{completedTask.taskName} </ItemTaskName>\n                                <ItemRequiredTime >{completedTask.requiredTime} min</ItemRequiredTime>\n                                <ItemDeadline >{dayjs(completedTask.deadline).format('YYYY/MM/DD HH:mm')}</ItemDeadline>\n                                <ItemDetail onClick={() => restoreTask(completedTask.id)}>復元</ItemDetail>\n                                <ItemDeleteIcon\n                                    onClick={() => deleteTask(completedTask.id)}\n                                    value=\"削除\" />\n                            </ItemBox>\n                        )\n                    }))\n                }\n            </ul >\n        </>\n    )\n}\n\nconst Title = styled.div`\n    height:72px;\n    margin-left:20px;\n    pointer:30px;\n    display:flex;\n    font-size:30px;\n    align-items:center;\n`\n\n//outputエリアのstyle\nconst IndexBox = styled.div`\n    display:flex;\n    align-items:center;\n    margin-top:30px;\n    background-color:#00CC99;\n    height:70px;\n`\n\nconst ItemBox = styled.div`\n    height:50px;\n    display:flex;\n    align-items:center;\n    background-color:#CCFFFF;\n    margin-top:5px;\n`\n\nconst Item = styled.div`\n    margin-left: 20px;\n`\n\nconst ItemTaskName = styled(Item)`\n    width:20%;\n`\nconst ItemRequiredTime = styled(Item)`\n    width:20%;\n`\nconst ItemDeadline = styled(Item)`\n    width:35%;\n`\nconst ItemDetail = styled(Item)`\n    width:50px;\n    cursor:pointer;\n        :hover{\n            opacity:0.8;\n            color:#0066FF;\n        }\n`\nconst ItemDeleteIcon = styled(DeleteIcon)`\n    font-size:18px;\n    cursor:pointer;\n        :hover{\n            opacity:0.8;\n            color:#0066FF;\n\n        }\n`\nexport default TaskHistory\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nconst Header = () => {\n    const history = useHistory()\n    const location = useLocation()\n\n    const moveToTaskHistory = () => {\n        history.push(\"/taskHistory\");\n    }\n\n    const moveToRoom = () => {\n        history.push(\"/\");\n    }\n\n    const moveToLogin = () => {\n        history.push(\"login\")\n    }\n\n    return (\n        <>\n            {(location.pathname === \"/\" || location.pathname === \"/taskHistory\") ?\n                < Ul >\n                    <Li onClick={moveToLogin}>ログアウト</Li>\n                    {\n                        (location.pathname === \"/\") ?\n                            <Li onClick={moveToTaskHistory}>履歴</Li>\n                            : <Li onClick={moveToRoom}>戻る</Li>\n                    }\n\n                </Ul > : <></>\n            }\n        </>\n    )\n\n}\n\nconst Li = styled.li`\n    list-style : none;\n    padding: 0 30px;\n    cursor: pointer;\n\n`\n\nconst Ul = styled.ul`\n    display: flex;\n    justify-content: flex-end;\n    align-items:center;\n    background-color: #99FFCC;\n    height:30px;\n`\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport firebase from '../config/firebase'\r\nimport 'firebase/firestore'\r\nimport { nanoid } from 'nanoid';\r\nimport { useHistory } from 'react-router-dom'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport dayjs from 'dayjs'\r\n\r\nconst Room = ({ getTasks }) => {\r\n    const history = useHistory()\r\n    const [tasks, setTasks] = useState()\r\n    const [taskName, setTaskName] = useState('')\r\n    const [requiredTime, setRequiredTime] = useState('0')\r\n    const [deadline, setDeadline] = useState('')\r\n    const [isInputTaskName, setIsInputTaskName] = useState(true)\r\n    const [isInputRequiredTime, setIsInputRequiredTime] = useState(true)\r\n    const [isInputDeadline, setIsInputDeadline] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (getTasks) {\r\n            sortTasks(getTasks.filter(task => task.isCompleted === false))\r\n            console.log(getTasks)\r\n            console.log(tasks)\r\n        }\r\n    }\r\n        , [getTasks])\r\n\r\n    //ボタンの処理\r\n    //詳細ボタンを押した時に詳細画面に遷移する処理\r\n    const moveToTaskDetail = (id) => {\r\n        history.push(`/taskDetail/${id}`);\r\n    }\r\n\r\n    //taskにかかる時間を選択するのに必要な定数\r\n    const requiredTime_Options = [\r\n        { value: \"0\" },\r\n        { value: \"5\" },\r\n        { value: \"10\" },\r\n        { value: \"15\" },\r\n        { value: \"20\" },\r\n        { value: \"30\" },\r\n        { value: \"35\" },\r\n        { value: \"40\" },\r\n        { value: \"45\" },\r\n        { value: \"50\" },\r\n        { value: \"55\" },\r\n        { value: \"60\" },\r\n    ]\r\n\r\n    const sortTasks = (tmpTasks) => {\r\n        //今の時間を取得し、msecに変換する\r\n        const today = new Date()\r\n        const now_msec = today.getTime()\r\n\r\n        tmpTasks?.forEach(tmpTask => (\r\n            //taskの優先順位を決める指標　締切までの時間-taskにかかる時間=締切日-今の時間-taskにかかる時間\r\n            tmpTask.difference = Date.parse(new Date(tmpTask.deadline)) - now_msec - tmpTask.requiredTime.slice(0, 1) * 60000\r\n        ))\r\n\r\n        console.log(tmpTasks)\r\n\r\n        tmpTasks?.sort((a, b) =>\r\n            a.difference - b.difference\r\n        )\r\n\r\n        setTasks(tmpTasks)\r\n    }\r\n\r\n    //plusbuttonを押した時、DBにtaskを追加する処理\r\n    const addNewTask = (event) => {\r\n        event.preventDefault()\r\n\r\n        const id = nanoid()\r\n\r\n        !taskName ? setIsInputTaskName(false) : setIsInputTaskName(true)\r\n        requiredTime === '0' ? setIsInputRequiredTime(false) : setIsInputRequiredTime(true)\r\n        !deadline ? setIsInputDeadline(false) : setIsInputDeadline(true)\r\n\r\n        if (taskName && requiredTime !== '0' && deadline) {\r\n\r\n            firebase.firestore().collection('tasks').doc(id).set({\r\n                taskName: taskName,\r\n                deadline: deadline,\r\n                requiredTime: requiredTime,\r\n                isCompleted: false,\r\n                id: id,\r\n\r\n            })\r\n\r\n            setTaskName('')\r\n            setRequiredTime('')\r\n            setDeadline('')\r\n            setIsInputTaskName(true)\r\n            setIsInputRequiredTime(true)\r\n            setIsInputDeadline(true)\r\n        }\r\n    }\r\n\r\n    //削除ボタンを押した時にtaskを削除する関数\r\n    const handleRemoveTask = (id) => {\r\n        firebase.firestore().collection('tasks').doc(id).update({\r\n            isCompleted: true\r\n        })\r\n\r\n    }\r\n\r\n    console.log(getTasks)\r\n    console.log(tasks)\r\n\r\n    return (\r\n        <>\r\n            <InputBox >\r\n                <TaskNameBox>\r\n                    <div>件名</div>\r\n                    <InputTaskName value={taskName} placeholder=\"Add New Task\"\r\n                        onChange={e => { setTaskName(e.target.value) }} />\r\n                    <Error isInput={isInputTaskName}>件名を入力してください</Error>\r\n                </TaskNameBox>\r\n\r\n                <RequiredTimeBox>\r\n                    <div>所要時間</div>\r\n                    <SelectRequiredTime\r\n                        onChange={e => setRequiredTime(e.target.value)}\r\n                        value={requiredTime}>\r\n                        {requiredTime_Options.map(requiredTime => {\r\n                            return (\r\n                                <option key={requiredTime.value}>{requiredTime.value}</option>\r\n                            )\r\n                        })}\r\n                    </SelectRequiredTime> min\r\n                    <Error isInput={isInputRequiredTime}>所要時間を入力してください</Error>\r\n                </RequiredTimeBox>\r\n\r\n                <DeadlineBox>\r\n                    <div>期日</div>\r\n                    <InputDeadline type=\"datetime-local\"\r\n                        value={deadline}\r\n                        onChange={e => setDeadline(e.target.value)} />\r\n                    <Error isInput={isInputDeadline}>期日を入力してください。</Error>\r\n                </DeadlineBox>\r\n\r\n                <AddCircleIconBox>\r\n                    < AddCircleIcon onClick={addNewTask} />\r\n                </AddCircleIconBox>\r\n            </InputBox>\r\n\r\n            <ul>\r\n                <IndexBox>\r\n                    <ItemTaskName>\r\n                        件名\r\n                    </ItemTaskName>\r\n                    <ItemRequiredTime>\r\n                        所要時間\r\n                    </ItemRequiredTime>\r\n                    <ItemDeadline>\r\n                        期日\r\n                    </ItemDeadline>\r\n                </IndexBox>\r\n                <TaskWrap>\r\n                    {\r\n                        tasks?.map((task) => (\r\n                            <ItemBox >\r\n                                <ItemTaskName >{task.taskName} </ItemTaskName>\r\n                                <ItemRequiredTime >{task.requiredTime} min</ItemRequiredTime>\r\n                                <ItemDeadline >{dayjs(task.deadline).format('YYYY/MM/DD HH:mm')}</ItemDeadline>\r\n                                <ItemDetail onClick={() => moveToTaskDetail(task.id)}>詳細</ItemDetail>\r\n                                <ItemDeleteIcon\r\n                                    onClick={() => handleRemoveTask(task.id)}\r\n                                    value=\"削除\" />\r\n                            </ItemBox>\r\n                        ))\r\n                    }\r\n                </TaskWrap>\r\n            </ul>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n//inputエリアのstyle\r\nconst InputBox = styled.div`\r\ndisplay:flex;\r\njustify-content:space-between;\r\nmargin-top:20px;\r\n`\r\n\r\nconst TaskNameBox = styled.div`\r\nmargin-left: 20px;\r\n`\r\nconst RequiredTimeBox = styled.div`\r\nmargin-left: 20px;\r\n`\r\nconst DeadlineBox = styled.div`\r\nmargin-left: 20px;\r\n`\r\n\r\nconst InputTaskName = styled.input`\r\nbox-sizing:border-box;\r\nborder:solid 1px black;\r\nheight:20px;\r\n`\r\nconst SelectRequiredTime = styled.select`\r\nborder:solid 1px black;\r\nheight:20px;\r\n`\r\nconst InputDeadline = styled.input`\r\nbox-sizing:border-box;\r\nborder:solid 1px black;\r\nheight:20px;\r\n`\r\nconst AddCircleIconBox = styled.div`\r\ncursor:pointer;\r\nmargin:auto 0;\r\nmargin-right:20px;\r\n`\r\n\r\nconst Error = styled.div`\r\ncolor:${({ isInput }) => isInput ? 'transparent' : 'red'};\r\n`\r\n//outputエリアのstyle\r\nconst TaskWrap = styled.div`\r\nwidth: 100%;\r\n`\r\nconst IndexBox = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\nmargin-top:30px;\r\nbackground-color:#00CC99;\r\nheight:70px;\r\n`\r\n\r\nconst ItemBox = styled.div`\r\nheight:50px;\r\ndisplay:flex;\r\nalign-items:center;\r\nbackground-color:#CCFFFF;\r\nmargin-top:5px;\r\n`\r\n\r\nconst Item = styled.div`\r\nmargin-left: 20px;\r\n`\r\n\r\nconst ItemTaskName = styled(Item)`\r\nwidth:20%;\r\n`\r\nconst ItemRequiredTime = styled(Item)`\r\nwidth:20%;\r\n`\r\nconst ItemDeadline = styled(Item)`\r\nwidth:35%;\r\n`\r\nconst ItemDetail = styled(Item)`\r\nwidth:50px;\r\ncursor:pointer;\r\n    :hover{\r\n        opacity:0.8;\r\n        color:#0066FF;\r\n    }\r\n`\r\nconst ItemDeleteIcon = styled(DeleteIcon)`\r\nfont-size:18px;\r\ncursor:pointer;\r\n    :hover{\r\n        opacity:0.8;\r\n        color:#0066FF;\r\n\r\n    }\r\n`\r\n\r\nexport default Room\r\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\"\nimport Login from './Authentication/Login'\nimport SignUp from './Authentication/SignUp'\nimport TaskDetail from './TaskDetail'\nimport TaskHistory from './History/TaskHistory'\nimport Header from './Header'\nimport Room from './Room/Room'\nimport firebase from './config/firebase'\nimport 'firebase/firestore'\nimport { Reset } from 'styled-reset'\n\nfunction App() {\n\n  const [getTasks, setGetTasks] = useState()\n\n  //読み込み時にfirestoreからtasksを呼び出す処理\n  useEffect(() => {\n    firebase.firestore().collection('tasks')\n      .onSnapshot((snapshot) => {\n        const getTasks = snapshot.docs.map(doc => {\n          return doc.data()\n        })\n        console.log(getTasks)\n        setGetTasks(getTasks)\n      });\n  }, [])\n\n  return (\n    <>\n      <Reset />\n\n      <Switch>\n        <Header />\n        <Route exact path='/' >\n          <Room getTasks={getTasks} />\n        </Route>\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/signup' component={SignUp} />\n        <Route exact path='/taskDetail/:id'>\n          < TaskDetail getTasks={getTasks} />\n        </Route>\n        <Route exact path='/taskHistory' >\n          <TaskHistory getTasks={getTasks} />\n        </Route>\n      </Switch>\n\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}